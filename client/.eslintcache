[{"/Users/Mistress/Desktop/Projects/finalproject/client/src/index.js":"1","/Users/Mistress/Desktop/Projects/finalproject/client/src/App.js":"2","/Users/Mistress/Desktop/Projects/finalproject/client/src/serviceWorker.js":"3","/Users/Mistress/Desktop/Projects/finalproject/client/src/utils/GlobalStore.js":"4","/Users/Mistress/Desktop/Projects/finalproject/client/src/localstorage.js":"5","/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Home.js":"6","/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Favorite.js":"7","/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Alacarte.js":"8","/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/AYCEMenu.js":"9","/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/OrderSummary.js":"10","/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Signup.js":"11","/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Choice.js":"12","/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Login.js":"13","/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Rules.js":"14","/Users/Mistress/Desktop/Projects/finalproject/client/src/utils/actions.js":"15","/Users/Mistress/Desktop/Projects/finalproject/client/src/reducer/index.js":"16","/Users/Mistress/Desktop/Projects/finalproject/client/src/utils/API.js":"17","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Footer.js":"18","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Card.js":"19","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Container.js":"20","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Image.js":"21","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Col.js":"22","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Button.js":"23","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/MenuList.js":"24","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Cart.js":"25","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Slider.js":"26","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Row.js":"27","/Users/Mistress/Desktop/Projects/finalproject/client/src/actions/index.js":"28","/Users/Mistress/Desktop/Projects/finalproject/client/src/reducer/cart.js":"29","/Users/Mistress/Desktop/Projects/finalproject/client/src/reducer/listing.js":"30","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Nav/index.js":"31","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Counter.js":"32","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/CartItem.js":"33","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/MenuItems.js":"34","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Buttongroup.js":"35"},{"size":644,"mtime":1606930166622,"results":"36","hashOfConfig":"37"},{"size":1736,"mtime":1606930166596,"results":"38","hashOfConfig":"37"},{"size":5086,"mtime":1606930166638,"results":"39","hashOfConfig":"37"},{"size":1459,"mtime":1606930166638,"results":"40","hashOfConfig":"37"},{"size":432,"mtime":1606930166623,"results":"41","hashOfConfig":"37"},{"size":2872,"mtime":1606934718667,"results":"42","hashOfConfig":"37"},{"size":0,"mtime":1606930166627,"results":"43","hashOfConfig":"37"},{"size":256,"mtime":1606930166625,"results":"44","hashOfConfig":"37"},{"size":463,"mtime":1606930166623,"results":"45","hashOfConfig":"37"},{"size":803,"mtime":1606937808956,"results":"46","hashOfConfig":"37"},{"size":2588,"mtime":1606930166635,"results":"47","hashOfConfig":"37"},{"size":776,"mtime":1606930166627,"results":"48","hashOfConfig":"37"},{"size":2604,"mtime":1606930166628,"results":"49","hashOfConfig":"37"},{"size":597,"mtime":1606930212730,"results":"50","hashOfConfig":"37"},{"size":114,"mtime":1606930166644,"results":"51","hashOfConfig":"37"},{"size":226,"mtime":1606930166637,"results":"52","hashOfConfig":"37"},{"size":463,"mtime":1606930166638,"results":"53","hashOfConfig":"37"},{"size":570,"mtime":1606930166609,"results":"54","hashOfConfig":"37"},{"size":255,"mtime":1606930166599,"results":"55","hashOfConfig":"37"},{"size":145,"mtime":1606930166604,"results":"56","hashOfConfig":"37"},{"size":155,"mtime":1606930166611,"results":"57","hashOfConfig":"37"},{"size":159,"mtime":1606930166602,"results":"58","hashOfConfig":"37"},{"size":251,"mtime":1606930166597,"results":"59","hashOfConfig":"37"},{"size":14200,"mtime":1606930166613,"results":"60","hashOfConfig":"37"},{"size":2472,"mtime":1606937891047,"results":"61","hashOfConfig":"37"},{"size":2547,"mtime":1606936667439,"results":"62","hashOfConfig":"37"},{"size":127,"mtime":1606930166619,"results":"63","hashOfConfig":"37"},{"size":543,"mtime":1606930166597,"results":"64","hashOfConfig":"37"},{"size":666,"mtime":1606930166636,"results":"65","hashOfConfig":"37"},{"size":715,"mtime":1606930166637,"results":"66","hashOfConfig":"37"},{"size":2813,"mtime":1606930166615,"results":"67","hashOfConfig":"37"},{"size":822,"mtime":1606930166606,"results":"68","hashOfConfig":"37"},{"size":401,"mtime":1606930166601,"results":"69","hashOfConfig":"37"},{"size":313,"mtime":1606930166611,"results":"70","hashOfConfig":"37"},{"size":311,"mtime":1606937306865,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"b0sfwc",{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Mistress/Desktop/Projects/finalproject/client/src/index.js",[],["146","147"],"/Users/Mistress/Desktop/Projects/finalproject/client/src/App.js",["148"],"import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducer';\nimport data from './db/menu.json';\nimport {saveState, loadState} from \"./localstorage\";\n\nimport Home from \"./pages/Home\";\nimport Alacarte from \"./pages/Alacarte\";\nimport AYCEMenu from \"./pages/AYCEMenu\";\nimport Favorite from \"./pages/Favorite\";\nimport OrderSummary from \"./pages/OrderSummary\";\nimport Signup from \"./pages/Signup\";\nimport Choice from \"./pages/Choice\";\nimport Rules from \"./pages/Rules\";\nimport Login from \"./pages/Login\";\n \n\nconst persistedState = loadState(\"shoppingCart\");\nconst store = createStore(reducer, {shoppingCart: persistedState});\ndata.forEach((item) => store.dispatch({\n    \"type\" : \"ADD_LISTING\",\n    \"item\" : item\n}));\nstore.subscribe(() => saveState(\"shoppingCart\", store.getState()[\"shoppingCart\"]));\n\n\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router itemListing = {store.getState()[\"itemListing\"]}>\n                <Route exact path=\"/\" component={Home}/>\n                <Route exact path=\"/home\" component={Home}/>\n                <Route exact path=\"/alacarte\" component={Alacarte}/>\n                <Route exact path=\"/menu\" component={AYCEMenu}/>\n                <Route exact path=\"/choice\" component={Choice}/>\n                <Route exact path=\"/favorite\" component={Favorite}/>\n                <Route exact path=\"/ordersummary\" component={OrderSummary}/> \n                <Route exact path=\"/SignUp\" component={Signup}/>\n                <Route exact path=\"/rules\" component={Rules}/>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;","/Users/Mistress/Desktop/Projects/finalproject/client/src/serviceWorker.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/utils/GlobalStore.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/localstorage.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Home.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Favorite.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Alacarte.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/AYCEMenu.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/OrderSummary.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Signup.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Choice.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Login.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/pages/Rules.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/utils/actions.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/reducer/index.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/utils/API.js",["149"],"import axios from 'axios';\n\nexport default {\n    // This function is to check if the user is logged in, and to return their info if they are not\n    checkUserInfo: () => {\n        return axios.get(\"/api/user_data\");\n    },\n    signup: (signupData) => {\n        return axios.post(\"/api/signup\", signupData)\n    },\n    login: (loginData) => {\n        return axios.post(\"/api/login\", loginData)\n    },\n    logout: () => {\n        return axios.get(\"/logout\");\n    }\n}","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Footer.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Card.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Container.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Image.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Col.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Button.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/MenuList.js",["150"],"import React from \"react\";\nimport Nav from \"./Nav\";\nimport Counter from \"./Counter\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Footer from \"./Footer\";\nimport menu from \"../db/menu.json\";\nimport MenuItems from \"./MenuItems\"\nimport Card from \"./Card\";\nimport Button from \"./Button\";\n\nfunction Menu(props) {\n    const ayceMenu = menu.filter(item => item.menu === \"ayce\");\n    const appetizers = ayceMenu.filter(item => item.category === \"Appetizer\");\n    const salads = ayceMenu.filter(item => item.category === \"Salad\");\n    const soups = ayceMenu.filter(item => item.category === \"Soup/Noodles\");\n    const rice = ayceMenu.filter(item => item.category === \"Rice\");\n    const classicRolls = ayceMenu.filter(item => item.category === \"Classic Roll/Hand Roll\");\n    const sushi = ayceMenu.filter(item => item.category === \"Sushi\");\n    const chefsSpecial = ayceMenu.filter(item => item.category === \"Chef’s Special Rolls\");\n    const tempuraRolls = ayceMenu.filter(item => item.category === \"Tempura Rolls\");\n    const bakedRolls = ayceMenu.filter(item => item.category === \"Baked Rolls\");\n    const desserts = ayceMenu.filter(item => item.category === \"Desserts\");\n    \n    return (\n        <>\n        <Nav />\n        <h3>All-You-Can-Eat Menu</h3> \n            <Container>\n                <Row>\n                    <h4 id=\"appetizers\">Appetizers</h4>\n                    <Container>\n                        {\n                            appetizers.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n\n                                let fishClass = \"\"; // Add fish icon to items with raw or undercooked fish\n                                if (item.fish) {\n                                    fishClass = \"fa fa-fish\";\n                                }\n                                // console.log(fishClass)\n                                return (\n                                <div className=\"card text-center\">\n                                    <div className=\"card-body d-flex justify-content-between\">\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={fishClass} oncePerOrder={oncePerOrder}>\n                                        <Button btn={\"float-right\"} function={() => {\n                                            props.addItem(item)}}\n                                            >+</Button>\n                                    </MenuItems>\n                                    </div>\n                                </div>\n                                )\n                            })\n                        }\n                    </Container>\n                </Row>\n\n                <Row>\n                    <h4 id=\"salad\">Salad</h4>\n                    <Container>\n                        {\n                            salads.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n\n                                let fishClass = \"\"; // Add fish icon to items with raw or undercooked fish\n                                if (item.fish) {\n                                    fishClass = \"fa fa-fish\";\n                                }\n                                return (<Card>\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={fishClass} oncePerOrder={oncePerOrder}>\n                                    </MenuItems>\n                                </Card>)\n                            })\n                        }\n                    </Container>\n                </Row>\n                <Row>\n                    <h4 id=\"soup\">Soup/Noodles</h4>\n                    <Container>\n                        {\n                            soups.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n\n                                let fishClass = \"\"; // Add fish icon to items with raw or undercooked fish\n                                if (item.fish) {\n                                    fishClass = \"fa fa-fish\";\n                                }\n                                return (<Card>\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={fishClass} oncePerOrder={oncePerOrder}>\n                                        <Button function={() => item.addItem(item.idx)}>+</Button>\n                                    </MenuItems>\n                                </Card>)\n                            })\n                        }\n                    </Container>\n                </Row>\n                <Row>\n                    <h4 id=\"rice\">Rice Entree</h4>\n                    <Container>\n                        {\n                            rice.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n\n                                let fishClass = \"\"; // Add fish icon to items with raw or undercooked fish\n                                if (item.fish) {\n                                    fishClass = \"fa fa-fish\";\n                                }\n                                return (<Card>\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={fishClass} oncePerOrder={oncePerOrder}>\n                                        <Button function={() => item.addItem(item.idx)}>+</Button>\n                                    </MenuItems>\n                                </Card>)\n                            })\n                        }\n                    </Container>\n                </Row>\n                <Row>\n                    <h4 id=\"classicRoll\">Classic Roll/Hand Roll</h4>\n                    <Container>\n                        {\n                            classicRolls.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n\n                                let fishClass = \"\"; // Add fish icon to items with raw or undercooked fish\n                                if (item.fish) {\n                                    fishClass = \"fa fa-fish\";\n                                }\n                                return (<Card>\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={fishClass} oncePerOrder={oncePerOrder}>\n                                        <Button function={() => item.addItem(item.idx)}>+</Button>\n                                    </MenuItems>\n                                </Card>)\n                            })\n                        }\n                    </Container>\n                </Row>\n                <Row>\n                    <h4 id=\"sushi\">Sushi (Nigiri)<i className=\"fas fa-fish\"></i></h4>\n                    <Container>\n                        {\n                            sushi.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n                                return (<Card>\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={\"\"} oncePerOrder={oncePerOrder}>\n                                        <Button function={() => item.addItem(item.idx)}>+</Button>\n                                    </MenuItems>\n                                </Card>)\n                            })\n                        }\n                    </Container>\n                </Row>\n                <Row>\n                    <h4 id=\"chefsSpecial\">Chef's Special Rolls</h4>\n                    <Container>\n                        {\n                            chefsSpecial.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n\n                                let fishClass = \"\"; // Add fish icon to items with raw or undercooked fish\n                                if (item.fish) {\n                                    fishClass = \"fa fa-fish\";\n                                }\n                                return (<Card>\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={fishClass} oncePerOrder={oncePerOrder}>\n                                        <Button function={() => item.addItem(item.idx)}>+</Button>\n                                    </MenuItems>\n                                </Card>)\n                            })\n                        }\n                    </Container>\n                </Row>\n                <Row>\n                    <h4 id=\"tempura\">Tempura (Fried) Rolls</h4>\n                    <Container>\n                        {\n                            tempuraRolls.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n\n                                let fishClass = \"\"; // Add fish icon to items with raw or undercooked fish\n                                if (item.fish) {\n                                    fishClass = \"fa fa-fish\";\n                                }\n                                return (<Card>\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={fishClass} oncePerOrder={oncePerOrder}>\n                                        <Button function={() => item.addItem(item.idx)}>+</Button>\n                                    </MenuItems>\n                                </Card>)\n                            })\n                        }\n                    </Container>\n                </Row>\n                <Row>\n                    <h4 id=\"bakedRolls\">Baked Rolls</h4>\n                    <Container>\n                        {\n                            bakedRolls.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n\n                                let fishClass = \"\"; // Add fish icon to items with raw or undercooked fish\n                                if (item.fish) {\n                                    fishClass = \"fa fa-fish\";\n                                }\n                                return (<Card>\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={fishClass} oncePerOrder={oncePerOrder}>\n                                    <Button function={() => item.addItem(item.idx)}>+</Button>\n                                    </MenuItems>\n                                </Card>)\n                            })\n                        }\n                    </Container>\n                </Row>\n                <Row>\n                    <h4 id=\"desserts\">Desserts</h4>\n                    <Container>\n                        {\n                            desserts.map((item, idx) => {\n                                let oncePerOrder = \"\"; // Give the heading a class of \"red\" if the item can only be ordered once\n                                if (item.onlyOrderOnce) {\n                                    oncePerOrder = \"red\";\n                                }\n\n                                let fishClass = \"\"; // Add fish icon to items with raw or undercooked fish\n                                if (item.fish) {\n                                    fishClass = \"fa fa-fish\";\n                                }\n                                return (<Card>\n                                    <MenuItems key={idx} name={item.name} price={item.price} description={item.description} fish={fishClass} oncePerOrder={oncePerOrder}>\n                                        <Button function={() => item.addItem(item.idx)}>+</Button>\n                                    </MenuItems>\n                                </Card>)\n                            })\n                        }\n                    </Container>\n                </Row>\n                <Row>\n                    <h5><i className=\"fa fa-fish\"></i> Raw Fish</h5>\n                    <p>Consuming raw or undercooked fish increases the risk of food bourne diseases, especially in people with certain health conditions.</p>\n                </Row>\n                </Container>\n                <Footer />\n        </>\n    );\n}\n\nexport default Menu;","/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Cart.js",["151"],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Slider.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Row.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/actions/index.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/reducer/cart.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/reducer/listing.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Nav/index.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Counter.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/CartItem.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/MenuItems.js",[],"/Users/Mistress/Desktop/Projects/finalproject/client/src/components/Buttongroup.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":17,"column":8,"nodeType":"158","messageId":"159","endLine":17,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":3,"column":1,"nodeType":"162","endLine":17,"endColumn":2},{"ruleId":"156","severity":1,"message":"163","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":15},{"ruleId":"164","severity":1,"message":"165","line":14,"column":15,"nodeType":"166","messageId":"167","endLine":14,"endColumn":17},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Counter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]